# name: deploy the react js application to the aws ec2 instance.

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "18"

#       - name: Install dependencies
#         run: npm install

#       - name: Build project
#         run: npm run build

#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@v0.1.2
#         with:
#           host: ${{ secrets.IP }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.PRIVATE_KEY }}
#           source: '.'
#           target: /home/ubuntu/app
#       - name: Restart server
#         run: ssh -o StrictHostKeyChecking=no -i ${{ secrets.PRIVATE_KEY }} ${{ secrets.USER }}@${{ secrets.IP }} 'cd /home/ubuntu/app && pm2 restart all'


name: Deploy React to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "18"

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Copy build files to EC2
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        scp -o StrictHostKeyChecking=no -i private_key.pem -r build/* ${{ secrets.USER }}@${{ secrets.IP }}:/home/ubuntu/app/

    - name: Restart React app on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
        pm2 restart all || pm2 start serve --name "react-app" -- -s /home/ubuntu/app -p 3000
        exit
        EOF
